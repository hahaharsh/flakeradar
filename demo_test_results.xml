<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.FlakeRadarDemo" tests="15" failures="6" errors="2" skipped="1" time="45.234">
  
  <!-- GREEN: Stable passing tests -->
  <testcase name="testUserAuthentication" classname="com.example.auth.AuthTest" time="0.123"/>
  <testcase name="testDataValidation" classname="com.example.validation.ValidatorTest" time="0.089"/>
  <testcase name="testCacheHit" classname="com.example.cache.CacheTest" time="0.045"/>
  
  <!-- RED: High flakiness - Database connectivity issues -->
  <testcase name="testDatabaseConnection" classname="com.example.db.ConnectionTest" time="2.456">
    <failure message="Connection timeout after 30000ms" type="java.sql.SQLException">
java.sql.SQLException: Connection to database failed: timeout
	at com.example.db.ConnectionPool.getConnection(ConnectionPool.java:87)
	at com.example.db.DatabaseTest.testConnection(DatabaseTest.java:45)
Connection pool exhausted. Max connections: 10, Active: 10
    </failure>
  </testcase>
  
  <testcase name="testTransactionRollback" classname="com.example.db.TransactionTest" time="1.892">
    <failure message="Database lock timeout" type="org.springframework.dao.CannotAcquireLockException">
org.springframework.dao.CannotAcquireLockException: Could not acquire lock
	at com.example.db.TransactionManager.rollback(TransactionManager.java:123)
Connection refused to database server on localhost:5432
    </failure>
  </testcase>
  
  <testcase name="testQueryPerformance" classname="com.example.db.PerformanceTest" time="5.123">
    <failure message="Query execution timeout" type="java.sql.SQLTimeoutException">
java.sql.SQLTimeoutException: Query timeout after 5000ms
	at com.example.db.QueryExecutor.execute(QueryExecutor.java:67)
Database connection pool size insufficient for concurrent operations
    </failure>
  </testcase>
  
  <!-- YELLOW: Medium flakiness - Timing/Race conditions -->
  <testcase name="testAsyncOperation" classname="com.example.async.AsyncTest" time="3.456">
    <failure message="AssertionError: Expected result not received" type="java.lang.AssertionError">
java.lang.AssertionError: Expected: &lt;SUCCESS&gt; but was: &lt;PENDING&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at com.example.async.AsyncTest.testOperation(AsyncTest.java:89)
Async operation did not complete within expected timeframe
    </failure>
  </testcase>
  
  <testcase name="testConcurrentAccess" classname="com.example.concurrent.ThreadTest" time="1.234">
    <failure message="ConcurrentModificationException" type="java.util.ConcurrentModificationException">
java.util.ConcurrentModificationException: Collection modified during iteration
	at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:909)
	at com.example.concurrent.ThreadTest.testAccess(ThreadTest.java:56)
Race condition detected in shared resource access
    </failure>
  </testcase>
  
  <!-- Network/API Issues -->
  <testcase name="testExternalAPI" classname="com.example.api.ExternalAPITest" time="10.567">
    <error message="ConnectException: Connection refused" type="java.net.ConnectException">
java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at com.example.api.HTTPClient.connect(HTTPClient.java:89)
External service unavailable: api.example.com:443
    </error>
  </testcase>
  
  <testcase name="testServiceTimeout" classname="com.example.api.ServiceTest" time="30.012">
    <error message="SocketTimeoutException: Read timeout" type="java.net.SocketTimeoutException">
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at com.example.api.ServiceClient.call(ServiceClient.java:124)
HTTP service response timeout after 30 seconds
    </error>
  </testcase>
  
  <!-- Resource/Environment Issues -->
  <testcase name="testMemoryIntensive" classname="com.example.memory.MemoryTest" time="2.789">
    <failure message="OutOfMemoryError: Java heap space" type="java.lang.OutOfMemoryError">
java.lang.OutOfMemoryError: Java heap space
	at com.example.memory.LargeObjectTest.createObjects(LargeObjectTest.java:45)
Insufficient memory allocated to JVM: -Xmx512m
    </failure>
  </testcase>
  
  <!-- GREEN: More stable tests -->
  <testcase name="testConfigValidation" classname="com.example.config.ConfigTest" time="0.067"/>
  <testcase name="testUtilityFunctions" classname="com.example.utils.UtilsTest" time="0.034"/>
  <testcase name="testStringOperations" classname="com.example.strings.StringTest" time="0.012"/>
  
  <!-- YELLOW: Auth/Permission Issues -->  
  <testcase name="testPermissionCheck" classname="com.example.security.PermissionTest" time="0.234">
    <failure message="AccessDeniedException: Insufficient privileges" type="org.springframework.security.access.AccessDeniedException">
org.springframework.security.access.AccessDeniedException: Access is denied
	at com.example.security.AccessManager.checkPermission(AccessManager.java:78)
User role 'USER' does not have permission for operation 'ADMIN_DELETE'
    </failure>
  </testcase>
  
  <!-- Skipped test -->
  <testcase name="testFeatureFlag" classname="com.example.feature.FeatureTest" time="0.000">
    <skipped message="Feature flag disabled in test environment"/>
  </testcase>
  
  <!-- GREEN: Final stable test -->
  <testcase name="testBasicMath" classname="com.example.math.MathTest" time="0.001"/>
  
</testsuite>
